TODO
* Add framerate
* Don't make nans go to zero

4.18.2014
* If people count is diff from our count, we drop everyone (actually add to 
suspect list)
* If tracker refs someone we don’t have, we add them
* Allow resizing screen, recall scaling
* make connectors check if their cells are still around when they are 
rendered (at the field level)
* if not, don’t render and increment suspect list
* Check to make sure this connector hasn’t exceeded our suspect max
* remove cell responsibility for deleting connectors 

4.20.2014
* Create shared modules between visual and conductor systems

4.26.2014
* Only render or draw shapes if they have location attribute
* Make cells and connectors start with shape (rather than object)
* Replace class creation with update in field render routines
* Add update routine in circle and line class
* Allow all params to be optional in Circle and Line class __init__
* Fixed problems with margin where the long margin wasn't recalc'd when screen 
was resized

4.20.2014
* Added Leg class in dataelements
* Added Body class in dataelements
* Hooked Leg and Body into Cell
* Added new OSC values in config per pulsefield protocol 2.1.1
* Added osc handler for new set values
* Added osc handler for Leg and Body data, stores data in dataelements

5/7/2014
* Laid the groundwork for vector AND screen
* Moved pyglet routines out of field class (into window class)
* Renamed some class files 

5/9/2014
* Made screen_modes vector and screen NOT mutually exclusive
* Made scale routines work for screen and vector independent
    - Something like this: "if self.m_output_mode == MODE_SCREEN"
    - changed to this: "if GRAPHMODES & GRAPHOPTS['screen']:"
* Added OSCmessage output to low-level graphic system (graphelements.py)
* Added OSC ip and port configs for all the other machines

5/13/2014
* Converted everything from cm to m, as provided by the tracker
* Added a handler for ping and ack
* Moved all OSC generation to oschandlers.py
* Created a dict of clients, since this comes from the config file
    the clients don't have to be connected yet to set up the client
* Implemented a home_im_home function to ping everyone upon start
* implemented the list of clients as a dict so I can easily access them
* Copied new version of conductor from visual subsys
* Stripped out all of the visual specific stuff
* Confirmed it still works

5/17/2014
* Added self.m_field.m_group_dict to shared/fieldelements.py
* Added add_group to Field class in shared/fieldelements.py
* Added update_group to Field class in shared/fieldelements.py
* Added del_group to Field class in shared/fieldelements.py
* Added group class to shared/dataelements.py
* Added self.m_addr_dict = {} to Group class
* Added add_attrs func to Group class
* Added add_group to Group class
* Added update_group to Group class
* Added del_group to Field class in shared/fieldelements.py
* Added list of cells in Group class
* Added self.m_field.m_event_dict to shared/fieldelements.py
* Added event class to shared/dataelements.py
* Added add_event to Field class in shared/fieldelements.py
* Added update_event to Field class in shared/fieldelements.py
* Added del_event to Field class in shared/fieldelements.py
* Added m_group to Cell class in shared/dataelements.py
* Added group info to update in Cell class
* Added group info to update in Field class 
* Added def create_attr to Cell class
* Added def create_attr to Conx class
* Added def create_attr to Group class
* Added add_group def to Field class
* Added group info to update in update_cell in Field class
* Made sure update_cell in Field class removes group membership
* If group membership drops to zero, delete group (Field class)
* Added ability to remove a cell from group to Cell class
* Added reference to a group in cell class
* Subclassed oschandlers, moving more general parts into shared

5/20/2014
* Added group update functions to oschandlers.py
* Added params to field.update_cell
* Added params to cell.update
* Changed all tuple pair representations of m_location to m_x and m_y
* Converted everything from radius to diameter
* Made RAD_PAD (not DIAM_PAD) additive not multiplicative (and only in the graphics engine)
* Added geo data handler
* Added geo fieldelement routines to add data to Cell class
* Half implemented suspect system for groups
* Made all sorts of group checks and mhousekeeping work
* Made group render routines work so you can see the groups drawn
* 'nans' if they are received from the tracker go to None rather than zero

5/24/2014
* Implemented conductor messages to visual subsys
* Added age_and_expire_connections func
* Added update_all_connections func
* Added testing funcs: grouped, contact, nearby, strangers, and fusion
* Implemented rollcall
* Implemented flex system for adjusting decay
* Implemented flex system for adjusting distances
* Added OSC to tell when conx attr is retired

5/26/2014
* Remove symbolic links (bst)
* Remove .DS_Store files (bst)
* Removed osc subdir from git (bst)
* Added pyOSC-3.7 OSC.py (bst)
* Added error handling in MyOSCHandler constructor (bst)
* Add ../shared to sys.path (bst)
* Moved most render functionality to draw functions to simplify
* Added update func to graphelements/Line
* Added severl line style choices in graphelements/Line
* Added a render func in circle and line that does all the calc that was 
    formerly done in update
* Added a smarter line drawing routine even for test curves (which look cool)

5/27/2014
* Diagnosed a prob where the connectors of deleted cells were being drawn to 
    their former locations
* Readded pathgrid routines
* Rejiggered path scaling routines based on new scheme
* Added exception handling for keyboard interupt
* To visual sys, added capability to draw pathgrid (press SPACE)
* Fixed a problem with scaling in pathgrid (radius, not diam)
* confirmed draw pathgrid was working
* Debugged a problem where the midpoint of lines was totally wack, traced to make_arc
* Got pathfinder working. at least the easy_path portion

5/28/2014
* Visual: Added routine that trims the ends of connectors so they don't go in cells
* Visual: Made the 'curves' routine the default for now
* In conductor, moved from a conditional sceme for conections to a decaying 
    running average that is triggered by passing an assigned trigger
* Added conductor configs for conx_age, conx_avg_time, conx_avg_trigger, 
    conx_distance
* Added conductor test routines for grouped, contact, friends, coord, facing,
    and fusion
* Added record_running_avg routine
* Added get_runnning_avg routine
* Refactored and debugged update_all_connections routine
* Fixed a problem where groups were not being recorder properly in dataelements
* Adjusted the triggers and memory_times so they fired off when they should
* 
