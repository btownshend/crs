TODO
* Add legs and body to vis
* Work out method for gathering IPs of other other systems
* Broadcast request for scaling info upon start
* Consider switching form centimeters to meters
* Ask for frame rate
* /pf/adddest host port framerate
* Add framerate
* Don't make nans go to zero
* Make it so myfield and graphelements can do BOTH vector and screen

4.18.2014
* If people count is diff from our count, we drop everyone (actually add to 
suspect list)
* If tracker refs someone we don’t have, we add them
* Allow resizing screen, recall scaling
* make connectors check if their cells are still around when they are 
rendered (at the field level)
* if not, don’t render and increment suspect list
* Check to make sure this connector hasn’t exceeded our suspect max
* remove cell responsibility for deleting connectors 

4.20.2014
* Create shared modules between visual and conductor systems

4.26.2014
* Only render or draw shapes if they have location attribute - DONE
* Make cells and connectors start with shape (rather than object) - DONE
* Replace class creation with update in field render routines - DONE
* Add update routine in circle and line class - DONE
* Allow all params to be optional in Circle and Line class __init__ - DONE
* Fixed problems with margin where the long margin wasn't recalc'd when screen 
was resized

4.20.2014
* Added Leg class in dataelements
* Added Body class in dataelements
* Hooked Leg and Body into Cell
* Added new OSC values in config per pulsefield protocol 2.1.1
* Added osc handler for new set values
* Added osc handler for Leg and Body data, stores data in dataelements

5/7/2014
* Laid the groundwork for vector AND screen
* Moved pyglet routines out of field class (into window class)
* Renamed some class files 

5/9/2014
* Made screen_modes vector and screen NOT mutually exclusive
* Made scale routines work for screen and vector independent
    - Something like this: "if self.m_output_mode == MODE_SCREEN"
    - changed to this: "if GRAPHMODES & GRAPHOPTS['screen']:"



